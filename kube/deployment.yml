---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: "{{.WWW_REF_NAME}}"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 33%
      maxSurge: 1
  revisionHistoryLimit: 3
  template:
    metadata:
      labels:
        name: "{{.WWW_REF_NAME}}"
    spec:
      containers:
      - name: "{{.WWW_REF_NAME}}"
        image: "{{.WWW_REF_IMAGE}}:{{.WWW_REF_TAG}}"
        imagePullPolicy: Always
        securityContext:
          runAsNonRoot: true
          runAsUser: 100
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
          limits:
            cpu: 200m
            memory: 500Mi
        ports:
          - name: "{{.WWW_REF_NAME}}"
            containerPort: {{.WWW_REF_PORT}}
        env:
          - name: KEYCLOAK_AUTH_URL
            valueFrom:
              secretKeyRef:
                name: "{{.WWW_REF_NAME}}"
                key: KEYCLOAK_AUTH_URL
          - name: KEYCLOAK_CLIENT_ID
            valueFrom:
              secretKeyRef:
                name: "{{.WWW_REF_NAME}}"
                key: KEYCLOAK_CLIENT_ID
          - name: KEYCLOAK_REALM
            valueFrom:
              secretKeyRef:
                name: "{{.WWW_REF_NAME}}"
                key: KEYCLOAK_REALM
          - name: API_BASE_URL
            value: {{.API_REF_PROTOCOL}}{{.API_REF_URL}}
          - name: READ_ONLY_MODE
            value: '{{.WWW_REF_READ_ONLY_MODE}}'
          - name: ENVIRONMENT
            value: '{{.ENVIRONMENT}}'
        livenessProbe:
          httpGet:
            path: /_health
            port: {{.WWW_REF_PORT}}
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /_health
            port: {{.WWW_REF_PORT}}
          initialDelaySeconds: 5
          periodSeconds: 5
      - name: proxy
        image: "{{.NGINX_IMAGE}}:{{.NGINX_TAG}}"
        securityContext:
          runAsNonRoot: true
        env:
          - name: PROXY_SERVICE_HOST
            value: 'http://127.0.0.1'
          - name: PROXY_SERVICE_PORT
            value: {{.WWW_REF_PORT}}
          - name: SERVER_CERT
            value: "/certs/tls.crt"
          - name: SERVER_KEY
            value: "/certs/tls.key"
          - name: LOG_FORMAT_NAME
            value: 'json'
          - name: NAXSI_USE_DEFAULT_RULES
            value: 'FALSE'
        ports:
          - name: https
            containerPort: 10443
        volumeMounts:
          - name: certs
            mountPath: /certs
      volumes:
      - name: certs
        secret:
          secretName: "{{.WWW_REF_NAME}}-pod-tls"
